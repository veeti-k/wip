name: "Main CI/CD"

on:
  push:
    branches:
      - "main"
  workflow_dispatch:

env:
  FRONT_BASE_URL: "https://h.veetik.com"
  API_BASE_URL: "https://api--prod.fly.dev"

jobs:
  checks:
    name: "Checks"
    runs-on: "ubuntu-latest"
    steps:
      - name: Cancel previous workflows
        uses: styfle/cancel-workflow-action@0.11.0
        with:
          access_token: ${{ github.token }}

      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node with Yarn cache
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: yarn
          cache-dependency-path: ./yarn.lock

      - name: Install deps
        run: yarn --frozen-lockfile

      - name: Build code
        run: yarn build

      - name: Run checks
        run: yarn checks

  update-prod-database:
    name: "Update Production database"
    environment: api__prod
    runs-on: ubuntu-latest
    needs: [checks]
    steps:
      - name: Cancel previous workflows
        uses: styfle/cancel-workflow-action@0.10.0
        with:
          access_token: ${{ github.token }}

      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node with Yarn cache
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: yarn
          cache-dependency-path: ./yarn.lock

      - name: Install deps
        run: yarn --frozen-lockfile

      - name: Update database
        run: |
          yarn db-push --url ${{ secrets.DATABASE_URL }}

  api-deploy-prod:
    name: "Api: Deploy to Production"
    environment: api__prod
    runs-on: ubuntu-latest
    needs: [update-prod-database]
    steps:
      - name: Cancel previous workflows
        uses: styfle/cancel-workflow-action@0.10.0
        with:
          access_token: ${{ github.token }}

      - name: Checkout code
        uses: actions/checkout@v3

      - name: Deploy
        uses: superfly/flyctl-actions@1.3
        with:
          args: |
            deploy --dockerfile ./Dockerfile \
              --strategy immediate --now --app api--prod --detach --remote-only \
              --build-arg APP=backend \
              -e FRONT_BASE_URL=${{ env.FRONT_BASE_URL }} \
              -e DATABASE_URL=${{ secrets.DATABASE_URL }} \
              -e G_CLIENT_ID=${{ secrets.G_CLIENT_ID }} \
              -e G_CLIENT_SECRET=${{ secrets.G_CLIENT_SECRET }} \
              -e G_REDIRECT_URI=${{ env.API_BASE_URL }}/google-auth/callback \
              -e JWT_AUDIENCE=h-prod \
              -e JWT_ISSUER=h-api-prod \
              -e JWT_SECRET=${{ secrets.JWT_SECRET }} \
              -e PORT=5000
        env:
          FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}

  frontend-deploy-prod:
    name: "Frontend: Deploy to Production"
    environment: front__prod
    runs-on: ubuntu-latest
    needs: [checks, api-deploy-prod]
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install Vercel CLI
        run: npm install --global vercel@latest

      - name: Deploy
        env:
          VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
          VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
        run: |
          vercel deploy --prod --token=${{ secrets.VERCEL_TOKEN }} \
            -b VITE_API_BASE_URL=${{ env.API_BASE_URL }} \
            -e VITE_API_BASE_URL=${{ env.API_BASE_URL }}
